{"version":3,"sources":["App.js","Components/Screen.js","Components/Buttons.js","index.js"],"names":["App","useState","screen","setScreen","oldCalc","setOldCalc","updateText","e","previous","target","innerHTML","updateSym","console","log","toString","Number","isInteger","parseInt","length","value","clear","symbol","slice","result","answer","eval","className","screenVal","Screen","Buttons","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"grCAIA,SAASA,MAAO,IAAD,UAEaC,oDAAS,IAFtB,gMAERC,OAFQ,cAEAC,UAFA,yBAGeF,oDAAS,IAHxB,iMAGRG,QAHQ,cAGCC,WAHD,cAKPC,WAAa,SAACC,GAClBJ,WAAU,SAAAK,GAAQ,OAAIA,EAAWD,EAAEE,OAAOC,cAItCC,UAAY,SAACJ,GACG,iBAAVL,SACRU,QAAQC,WAAWX,QACnBC,UAAUD,OAAOY,cAEhBC,OAAOC,UAAUC,SAASf,OAAOA,OAAOgB,OAAO,MAAwB,iBAAVhB,SAC9DC,WAAU,SAAAK,GAAQ,OAAIA,EAAWD,EAAEE,OAAOU,UAMxCC,MAAQ,WACZjB,UAAU,CAAC,MAGPkB,OAAS,WACG,KAAbnB,OAAO,GACRC,WAAU,SAAAK,GAAQ,MAAI,IAAMA,KAE5BL,WAAU,SAAAK,GAAQ,OAAGA,EAASc,MAAM,OAIlCC,OAAS,SAATA,SACJ,IAAIC,OAAStB,OACO,iBAAVsB,QACRnB,YAAW,SAAAG,GAAQ,OAAGA,EAAWN,UACjCsB,OAASC,KAAKD,UAER,kLAANtB,OAASsB,OAAOV,YAGlBF,QAAQC,IAAIX,QACZU,QAAQC,WAAWW,QACnBrB,UAAUqB,SAGZ,OACE,mEAAKE,UAAU,MAAf,UACE,2DAAC,kDAAD,CAAQH,OAAQ,GAAII,UAAWzB,OAAQE,QAASA,UAChD,2DAAC,mDAAD,CAASE,WAAYA,WAAYK,UAAWA,UAAUS,MAAOA,MAAOG,OAAQA,OAAQF,OAAQA,YAKnFrB,2B,8BC5Df,iBAYe4B,IAXf,YAAuC,IAAtBD,EAAqB,EAArBA,UAAWvB,EAAU,EAAVA,QAGxB,OACI,sBAAKsB,UAAU,SAAf,UACI,mBAAGA,UAAU,WAAb,SAAyBtB,IACzB,oBAAIsB,UAAU,SAAd,SAAwBC,S,6BCNpC,iBAsCeE,IArCf,YAAmE,IAAhDvB,EAA+C,EAA/CA,WAAYK,EAAmC,EAAnCA,UAAWS,EAAwB,EAAxBA,MAAOG,EAAiB,EAAjBA,OAAQF,EAAS,EAATA,OAKjD,OACQ,sBAAKK,UAAU,cAAf,UAEQ,wBAAQA,UAAU,oBAAoBI,QAASV,EAA/C,eACA,wBAAQM,UAAU,oBAAoBI,QAAST,EAA/C,iBACA,wBAAQK,UAAU,oBAAoBI,QAASnB,EAAWQ,MAAM,GAAhE,eACA,wBAAQO,UAAU,gBAAoBI,QAASnB,EAAWQ,MAAM,IAAhE,kBAGA,wBAAQO,UAAU,mBAAmBI,QAASxB,EAA9C,eACA,wBAAQoB,UAAU,mBAAmBI,QAASxB,EAA9C,eACA,wBAAQoB,UAAU,mBAAmBI,QAASxB,EAA9C,eACA,wBAAQoB,UAAU,gBAAmBI,QAASnB,EAAWQ,MAAM,IAA/D,kBAEA,wBAAQO,UAAU,mBAAmBI,QAASxB,EAA9C,eACA,wBAAQoB,UAAU,mBAAmBI,QAASxB,EAA9C,eACA,wBAAQoB,UAAU,mBAAmBI,QAASxB,EAA9C,eACA,wBAAQoB,UAAU,gBAAmBI,QAASnB,EAAWQ,MAAM,IAA/D,eAEA,wBAAQO,UAAU,mBAAmBI,QAASxB,EAA9C,eACA,wBAAQoB,UAAU,mBAAmBI,QAASxB,EAA9C,eACA,wBAAQoB,UAAU,mBAAmBI,QAASxB,EAA9C,eACA,wBAAQoB,UAAU,gBAAmBI,QAASnB,EAAWQ,MAAM,IAA/D,eAEA,wBAAQO,UAAU,4BAA4BI,QAASxB,EAAvD,eACA,wBAAQoB,UAAU,mBAA4BI,QAASxB,EAAvD,eACA,wBAAQoB,UAAU,gBAA4BI,QAASP,EAAvD,oB,6BCjCxB,iEAMAQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.788a2eb8.chunk.js","sourcesContent":["import './App.css';\nimport Screen from './Components/Screen';\nimport Buttons from './Components/Buttons'\nimport { useState,  } from \"react\";\nfunction App() {\n\nconst [screen, setScreen] = useState('');\nconst [oldCalc, setOldCalc] = useState(\"\");\n\n  const updateText = (e) => {\n    setScreen(previous => previous + e.target.innerHTML)\n    \n  }\n\n  const updateSym = (e) => {\n    if(typeof screen != 'string') {\n      console.log(typeof screen)\n      setScreen(screen.toString())\n    }\n    if(Number.isInteger(parseInt(screen[screen.length-1])) ||typeof screen == 'number' ) {\n      setScreen(previous => previous + e.target.value)\n    }\n    \n    \n  }\n\n  const clear = () => {\n    setScreen([\"\"])\n  }\n\n  const symbol = () => {\n    if(screen[0] != \"-\") {\n      setScreen(previous => \"-\" + previous)\n    }else {\n      setScreen(previous=> previous.slice(1))\n    }\n  }\n\n  const result = ()=> {\n    let answer = screen\n    if(typeof answer == 'string'){\n      setOldCalc(previous=> previous + screen)\n      answer = eval(answer)\n    }else {\n      screen = answer.toString()\n    }\n   \n    console.log(screen)\n    console.log(typeof answer)\n    setScreen(answer)\n  }\n\n  return (\n    <div className=\"App\">\n      <Screen result={23} screenVal={screen} oldCalc={oldCalc}/>\n      <Buttons updateText={updateText} updateSym={updateSym}clear={clear} result={result} symbol={symbol}/>\n    </div>\n  );\n}\n\nexport default App;\n","import \"./styles/Screen.css\"\nfunction Screen({screenVal, oldCalc}) {\n\n\n    return(\n        <div className=\"screen\">\n            <p className=\"old-calc\">{oldCalc}</p>\n            <h2 className=\"result\">{screenVal}</h2>\n        </div>\n    );\n}\n\nexport default Screen;","\nimport \"./styles/Buttons.css\"\nfunction Buttons ({updateText, updateSym, clear, result, symbol}) {\n\n        \n\n\n        return(\n                <div className=\"button-cont\">\n                \n                        <button className=\"light-grey-button\" onClick={clear}>C</button>\n                        <button className=\"light-grey-button\" onClick={symbol}>+/-</button>\n                        <button className=\"light-grey-button\" onClick={updateSym} value=\"\">%</button>\n                        <button className=\"orange-button\"     onClick={updateSym} value=\"/\">รท</button>\n                \n                \n                        <button className=\"dark-grey-button\" onClick={updateText}>7</button>\n                        <button className=\"dark-grey-button\" onClick={updateText}>8</button>\n                        <button className=\"dark-grey-button\" onClick={updateText}>9</button>\n                        <button className=\"orange-button\"    onClick={updateSym} value=\"*\">ร</button>\n                \n                        <button className=\"dark-grey-button\" onClick={updateText}>4</button>\n                        <button className=\"dark-grey-button\" onClick={updateText}>5</button>\n                        <button className=\"dark-grey-button\" onClick={updateText}>6</button>\n                        <button className=\"orange-button\"    onClick={updateSym} value=\"-\">-</button>\n                \n                        <button className=\"dark-grey-button\" onClick={updateText}>1</button>\n                        <button className=\"dark-grey-button\" onClick={updateText}>2</button>\n                        <button className=\"dark-grey-button\" onClick={updateText}>3</button>\n                        <button className=\"orange-button\"    onClick={updateSym} value=\"+\">+</button>\n                \n                        <button className=\"dark-grey-button zero-btn\" onClick={updateText}>0</button>\n                        <button className=\"dark-grey-button\"          onClick={updateText}>.</button>\n                        <button className=\"orange-button\"             onClick={result}>=</button>\n                \n                </div>    \n        );\n}\n\nexport default Buttons","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}